package spring01junitTest;

import org.junit.Test;

public class Spring01 {
    //单元测试  在公司中，自己先测试完毕，请队友问问题前，一定要说，我Junit测试 没通过啊，bug 是xxxx，帮看一下.....
    @Test
    public void test01(){
        System.out.println("我是单元测试，在公司中，单元测试是 java程序员的自己的 必须的测试，用来测试"+
                "dao层，controller层，是否能正常运行"+
                ""+
                "2.单元测试 的写法，必须是@Test 注解 来自于org.junit.Test 这个包，必须是void静态  没有返回值的方法！"+
                "3.方法名称 和 类名 最好不要起名为 test()  Test.java"+
                "4.单元测试 使用来代替 main方法测试，main方法测试有一定的局限性，例如：无法测试web项目，比如 项目request等");
    };
}
//反射：是 在jvm 虚拟机的类加载中  .java ------->class文件 在这个转换期间
//jvm  可以 看到 类的 所有的信息，比如属性，方法，父类，接口等
//即：反射 对于任意一个对象 都能够调出他的任一方法 和属性
//这样的动态获取信息及动态调用对象的方法功能  叫做 java的反射机制，  不是 我们通俗讲的 镜面反射光线的反射

//为什么要学反射？ 因为 反射就是 Spring框架的底层实现
//为什么Spring框架要用到反射，   因为 反射 可以 解耦
//什么是解耦    解耦就是 接触程序之间的耦合
//什么是耦合    耦合就是 程序之间 过于依赖了
//什么叫做依赖  依赖 就是 A程序调用B程序， A程序中 有B的方法调用

//先讲耦合